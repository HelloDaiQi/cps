<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.daiqi.mapper.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.daiqi.entity.Feedback" >
    <id column="feedbackId" property="feedbackid" jdbcType="INTEGER" />
    <result column="feedbackPerson" property="feedbackperson" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="feedbackTime" property="feedbacktime" jdbcType="DATE" />
    <result column="result" property="result" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    feedbackId, feedbackPerson, content, type, feedbackTime, result
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.daiqi.entity.FeedbackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_feedback
    where feedbackId = #{feedbackid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_feedback
    where feedbackId = #{feedbackid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.daiqi.entity.FeedbackExample" >
    delete from t_feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.daiqi.entity.Feedback" >
    insert into t_feedback (feedbackId, feedbackPerson, content, 
      type, feedbackTime, result
      )
    values (#{feedbackid,jdbcType=INTEGER}, #{feedbackperson,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{feedbacktime,jdbcType=DATE}, #{result,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daiqi.entity.Feedback" >
    insert into t_feedback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="feedbackid != null" >
        feedbackId,
      </if>
      <if test="feedbackperson != null" >
        feedbackPerson,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="feedbacktime != null" >
        feedbackTime,
      </if>
      <if test="result != null" >
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="feedbackid != null" >
        #{feedbackid,jdbcType=INTEGER},
      </if>
      <if test="feedbackperson != null" >
        #{feedbackperson,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="feedbacktime != null" >
        #{feedbacktime,jdbcType=DATE},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.daiqi.entity.FeedbackExample" resultType="java.lang.Integer" >
    select count(*) from t_feedback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_feedback
    <set >
      <if test="record.feedbackid != null" >
        feedbackId = #{record.feedbackid,jdbcType=INTEGER},
      </if>
      <if test="record.feedbackperson != null" >
        feedbackPerson = #{record.feedbackperson,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbacktime != null" >
        feedbackTime = #{record.feedbacktime,jdbcType=DATE},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_feedback
    set feedbackId = #{record.feedbackid,jdbcType=INTEGER},
      feedbackPerson = #{record.feedbackperson,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      feedbackTime = #{record.feedbacktime,jdbcType=DATE},
      result = #{record.result,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daiqi.entity.Feedback" >
    update t_feedback
    <set >
      <if test="feedbackperson != null" >
        feedbackPerson = #{feedbackperson,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="feedbacktime != null" >
        feedbackTime = #{feedbacktime,jdbcType=DATE},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackId = #{feedbackid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daiqi.entity.Feedback" >
    update t_feedback
    set feedbackPerson = #{feedbackperson,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      feedbackTime = #{feedbacktime,jdbcType=DATE},
      result = #{result,jdbcType=VARCHAR}
    where feedbackId = #{feedbackid,jdbcType=INTEGER}
  </update>
</mapper>